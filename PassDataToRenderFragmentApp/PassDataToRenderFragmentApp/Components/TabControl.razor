

<CascadingValue Value="this">
    <div class="btn-group" role="group">
    @foreach (var tabPage in TabPages)
    {
        <button type="button" class="btn @GetButtonClass(tabPage)" @onclick="@(()=> ActivateTabPage(tabPage))">
            @if (TabTextTemplate != null)
            {
                @TabTextTemplate(tabPage)    
            }
            else
            {
                @tabPage.Text
            }
        </button>
    }
</div>

    @ChildContent
</CascadingValue>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public RenderFragment<TabPage>? TabTextTemplate { get; set; }


    List<TabPage> TabPages = new List<TabPage>();
    public TabPage? ActiveTabPage { get; set; }


    internal void AddPage(TabPage tabPage)
    {
        TabPages.Add(tabPage);
        if (TabPages.Count == 1) ActiveTabPage = tabPage;
        StateHasChanged();
    }

    string GetButtonClass(TabPage tabPage)
    => tabPage == ActiveTabPage ? "btn-primary" : "btn-secondary";

    void ActivateTabPage(TabPage tabPage) => ActiveTabPage = tabPage;

}